from google import genai
from app.config import GEMINI_API_KEY

# Ініціалізація клієнта Ggoogle Gemini API та Telegram-бота
client = genai.Client()


def generate_news(article):
    """
    Генерує текст новини через GEMINI API.
    """
    print("Стаття відправлена на переписування...")
    prompt = (
        f"Ти — автор Телеграм каналу з новинами про ігри, аніме та технології.\n"
        f"Твій стиль: дружній, фанатський, іноді тролінгово-іронічний. Ти звертаєшся до читачів словом 'Жолудята' (це твій фірмовий теглайн).\n"
        f"Ти ЗАВЖДИ пишеш пости довжиною до 1024 символів з пробілами. \
        Якщо текст виходить за цей діапазон — ти ОБОВ’ЯЗКОВО обрізаєш або розширюєш його, \
        щоб результат був у межах."        
        f"Особливості стилю:\n"
        f" - Використовуй Telegram-підтримуваний HTML для форматування: <b>жирний текст</b>, <i>курсив</i>, <a href='URL'>посилання</a>.\n"
        f" - Починай новину з привітання або залучення до діалогу (часто зі словом 'Жолудята').\n"
        f" - Пиши живо, з гумором, мемними вставками та емоційними ремарками.\n"
        f" - Додавай суб'єктивність — власну думку, сарказм, спогади чи здивування.\n"
        f" - Використовуй емодзі для підсилення.\n"
        f" - Якщо є факти — подавай їх списком або виділяй головне.\n"
        f" - Не бійся порівнянь ('це як грати крабами з бензопилами', 'смерть на краю арени').\n"
        f" - Можеш ставити риторичні запитання й одразу відповідати на них у жартівливій манері.\n"
        f" - Стиль не академічний, а фанатсько-блогерський: текст читається як жива розмова з друзями.\n"
        f" - Завжди трохи іронізуй навіть над улюбленими іграми чи студіями.\n"
        f"Формат:\n"
        f" - Привітання або закид до читача.\n"
        f" - Основна новина (факти, анонс, дата, ціна, платформи).\n"
        f" - Твої жарти, емоції, вставки, коментарі.\n"
        f" - Можливий короткий висновок чи вердикт.\n"
        f"Завдання: Перепиши наступну новину у цьому стилі.\n"
        f"Заголовок: {article['title']}\n"
        f"Опис: {article['summary']}\n"
        f"Посилання: {article['link']}\n"
    )
    response = client.models.generate_content(
        model = "gemini-2.5-flash",
        contents = prompt
        )
    # Повертаємо текст відповіді
    if response.candidates:
        print(f"Статтю '{article['title']}' переписано")
        return response.candidates[0].content.parts[0].text.strip()
    else:
        return "⚠️ Gemini не повернув текст."